@model IEnumerable<RealEstateApp.Core.Application.ViewModels.Property.PropertyViewModel>
@{
    ViewData["Title"] = "Resultados";
}
<link rel="stylesheet" href="~/css/home.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

<div class="container">
    <!-- Filtros -->
    <div class="row mb-4 filters-container">
        <div class="col-12">
            <form asp-action="Filter" method="post">
                <div class="row">
                    <div class="col-12 col-md-4">
                        <div class="form-group">
                            <label for="Bedrooms">Habitaciones:</label>
                            <input type="number" name="Bedrooms" class="form-control" id="Bedrooms" placeholder="Cantidad de habitaciones" />
                        </div>
                        <div class="form-group">
                            <label for="Bathrooms">Baños:</label>
                            <input type="number" name="Bathrooms" class="form-control" id="Bathrooms" placeholder="Cantidad de baños" />
                        </div>
                    </div>
                    <div class="col-12 col-md-4">
                        <div class="form-group">
                            <label for="PropertyCode">Property Code:</label>
                            <input type="text" name="PropertyCode" class="form-control" id="PropertyCode" placeholder="Property Code" />
                        </div>
                        <div class="form-group position-relative">
                            <label for="PropertyTypesDropdown">Tipo de Propiedad:</label>
                            <button type="button" class="btn btn-light dropdown-toggle w-100 text-start" id="PropertyTypesDropdown">
                                Seleccionar
                            </button>
                            <div class="dropdown-menu w-100 p-3" id="PropertyTypesMenu">
                                @foreach (var type in ViewBag.PropertyTypes)
                                {
                                    <div class="form-check">
                                        <input type="checkbox" name="PropertyTypeIds" value="@type.Id" class="form-check-input" id="type-@type.Id" />
                                        <label class="form-check-label" for="type-@type.Id">@type.Name</label>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-4">
                        <div class="form-group">
                            <label>Rango de precio:</label>
                            <div id="price-range"></div>
                            <input type="hidden" id="minPrice" name="MinPrice" />
                            <input type="hidden" id="maxPrice" name="MaxPrice" />
                            <div class="d-flex justify-content-between">
                                <span id="minPriceOutput">0</span> - <span id="maxPriceOutput">35,000,000+</span>
                            </div>
                        </div>
                        <div class="d-flex align-items-end">
                            <button type="submit" class="btn btn-filter w-100">
                                <i class="fas fa-search"></i> Filtrar
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Texto "Filtered Results" -->
    <h3 class="filtered-results mb-4">Resultados</h3>

    <!-- Tarjetas de propiedades -->
    <div class="row properties-container">
        @foreach (var property in Model)
        {
            <div class="col-sm-6 col-md-4 mb-4">
                <a asp-action="Details" asp-route-id="@property.Id" class="card-link">
                    <div class="card h-100 shadow-sm">
                        <div class="sale-type-badge">
                            @property.SaleType.ToUpper()
                        </div>
                        <img class="card-img-top" src="@property.ImageUrl" alt="Property Image" style="object-fit: cover; height: 200px;">
                        <div class="card-body">
                            <p class="property-type"><strong>@property.PropertyType</strong></p>
                            <p class="property-code">Código: @property.PropertyCode</p>
                            <p class="property-price">RD$ @property.Price</p>
                            <ul class="list-unstyled">
                                <li><i class="fas fa-bed"></i> <strong>Habitaciones:</strong> @property.Bedrooms</li>
                                <li><i class="fas fa-bath"></i> <strong>Baños:</strong> @property.Bathrooms</li>
                                <li><i class="fas fa-ruler-combined"></i> <strong>Tamaño:</strong> @property.PropertySizeMeters m²</li>
                            </ul>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.5.0/nouislider.min.js"></script>
    <script>
        var priceSlider = document.getElementById('price-range');
        noUiSlider.create(priceSlider, {
            start: [0, 35000000],
            connect: true,
            range: {
                'min': 0,
                'max': 35000000
            },
            step: 1000,
            format: {
                to: function (value) {
                    return Math.round(value);
                },
                from: function (value) {
                    return Number(value);
                }
            }
        });

        function formatPrice(value) {
            return value.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        priceSlider.noUiSlider.on('update', function (values, handle) {
            var minPrice = formatPrice(values[0]);
            var maxPrice = formatPrice(values[1]) + (values[1] == 35000000 ? "+" : "");
            document.getElementById('minPrice').value = values[0];
            document.getElementById('maxPrice').value = values[1];
            document.getElementById('minPriceOutput').innerText = minPrice;
            document.getElementById('maxPriceOutput').innerText = maxPrice;
        });

        // Cambiar el color del range slider a verde
        var connect = priceSlider.querySelectorAll('.noUi-connect');
        for (var i = 0; i < connect.length; i++) {
            connect[i].style.backgroundColor = '#28a745';
        }
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const dropdownButton = document.getElementById("PropertyTypesDropdown");
            const dropdownMenu = document.getElementById("PropertyTypesMenu");

            // Mostrar/ocultar el menú desplegable
            dropdownButton.addEventListener("click", function () {
                const isVisible = dropdownMenu.style.display === "block";
                dropdownMenu.style.display = isVisible ? "none" : "block";
            });

            // Cerrar el menú si se hace clic fuera de él
            document.addEventListener("click", function (event) {
                if (!dropdownButton.contains(event.target) && !dropdownMenu.contains(event.target)) {
                    dropdownMenu.style.display = "none";
                }
            });

            // Actualizar texto del botón con los tipos seleccionados
            const checkboxes = dropdownMenu.querySelectorAll('input[type="checkbox"]');
            checkboxes.forEach((checkbox) => {
                checkbox.addEventListener("change", function () {
                    const selected = Array.from(checkboxes)
                        .filter((chk) => chk.checked)
                        .map((chk) => chk.parentElement.textContent.trim());
                    dropdownButton.textContent = selected.length
                        ? selected.join(", ")
                        : "Seleccionar";
                });
            });
        });
    </script>
}